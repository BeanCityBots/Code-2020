// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3777.BotWars;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
//import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
//import edu.wpi.first.wpilibj.livewindow.LiveWindow;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
//import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_VictorSPX subSysDriveVictorSPXRightFront;
    public static WPI_VictorSPX subSysDriveVictorSPXRightBack;
    public static SpeedControllerGroup subSysDriveMtrGroupLeft;
    public static WPI_TalonSRX subSysDriveTalonSRXLeftFront;
    public static WPI_TalonSRX subSysDriveTalonSRXLeftBack;
    public static SpeedControllerGroup subSysDriveMtrGroupRight;
    public static DifferentialDrive subSysDriveDifferentialDrive;
    public static DoubleSolenoid subSysHopperDblSolenoid;
    public static DoubleSolenoid subSysPistonTopDblSolenoid;
    public static DoubleSolenoid subSysPistonBottomDblSolenoid;
    public static Spark subSysSpinnerLeft;
    public static Spark subSysSpinnerRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        subSysDriveVictorSPXRightBack = new WPI_VictorSPX(1);
        
        
        subSysDriveVictorSPXRightFront = new WPI_VictorSPX(2);
        
        
        subSysDriveMtrGroupRight = new SpeedControllerGroup(subSysDriveVictorSPXRightFront, subSysDriveVictorSPXRightBack  );
        //LiveWindow.addActuator("SubSysDrive", "MtrGroupLeft", subSysDriveMtrGroupLeft);
        
        subSysDriveTalonSRXLeftFront = new WPI_TalonSRX(3);
        
        
        subSysDriveTalonSRXLeftBack = new WPI_TalonSRX(4);
        
        
        subSysDriveMtrGroupLeft = new SpeedControllerGroup(subSysDriveTalonSRXLeftFront, subSysDriveTalonSRXLeftBack  );
        //LiveWindow.addActuator("SubSysDrive", "MtrGroupRight", subSysDriveMtrGroupRight);
        
        subSysDriveDifferentialDrive = new DifferentialDrive(subSysDriveMtrGroupLeft, subSysDriveMtrGroupRight);
        //LiveWindow.addActuator("SubSysDrive", "Differential Drive", subSysDriveDifferentialDrive);

        subSysSpinnerLeft = new Spark(0);
        subSysSpinnerRight = new Spark(1);

        //subSysDriveDifferentialDrive.setSafetyEnabled(true);
        //subSysDriveDifferentialDrive.setExpiration(0.1);
        //subSysDriveDifferentialDrive.setMaxOutput(-1.0);

        subSysHopperDblSolenoid = new DoubleSolenoid(0, 2, 5);
        subSysPistonBottomDblSolenoid = new DoubleSolenoid(0, 0, 7);
        subSysPistonTopDblSolenoid = new DoubleSolenoid(0, 1, 6);
        //LiveWindow.addActuator("SubSysFlopper", "DblSolenoid", subSysFlopperDblSolenoid);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
